# =============================
# 语言：不是 Python，而是 INI 配置文件（纯文本格式）。
# 作用：统一 Pytest 的默认配置，让你在本地运行和在 CI（GitHub Actions）里运行时表现一致。
# 好处：不用每次都手动写命令行参数，减少出错。
# =============================

# Keep test configs consistent across local & CI
# 本地与 CI 统一测试配置（报告路径、重试、告警等）
# ローカルとCIの設定を統一（レポート出力・リトライ・警告抑制）


[pytest]
# Limit discovery to tests/ directory
# 仅在 tests/ 目录下发现测试
# tests/ ディレクトリ内のみテストを検出
testpaths = tests


# Common addopts (local + CI)
# 通用参数（本地/CI 通用）
# 共通オプション（ローカル/CI共通）
addopts =
    -q                     # Quiet mode 简洁输出 簡潔な出力
    -ra                    # Show summary of skipped/failed 展示失败/跳过概要 スキップ/失敗の概要表示
    --maxfail=1            # Stop after first failure 首个失败就停 最初の失敗で停止
    --disable-warnings     # Hide warnings 屏蔽警告 警告を非表示
    --reruns=2             # Rerun failed tests 失败重跑2次 失敗テストを2回再実行
    --reruns-delay=2       # Wait before rerun 重跑前等待2秒 再実行前に2秒待機
    # Unified HTML report path (CI artifact / local consistent)
    # 统一生成 HTML 报告到 playwright-report/index.html（与 CI 一致）
    # HTMLレポートを playwright-report/index.html に統一（CIと一致）
    --html=playwright-report/index.html
    --self-contained-html  # Bundle CSS/JS into HTML 生成独立 HTML 一体化HTMLを生成

# Optional: filter warnings
# 可选：隐藏部分第三方包的弃用告警
# 任意：一部のサードパーティ警告を非表示
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    
# Plugins auto-loaded
# 不需要手动声明插件；安装了 pytest-playwright 后会自动加载
# プラグインは手動宣言不要；pytest-playwright を入れると自動ロード
# plugins = pytest_playwright.plugin
