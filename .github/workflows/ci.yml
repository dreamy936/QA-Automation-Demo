name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# ⬇️ 关键：给 GITHUB_TOKEN 授权（deploy-pages 需要 OIDC）
permissions:
  contents: read
  pages: write
  id-token: write

# 避免并发发布相互冲突
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  test:
    runs-on: ubuntu-22.04
    env:
      TZ: Asia/Tokyo        # 让构建机用日本时区生成报告时间
    # 让 Actions 在“环境”里显示 Pages URL（非必须，但好看）
    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Playwright browsers and system deps
        run: python -m playwright install --with-deps

      - name: Run API tests
        run: pytest tests/api -q

      - name: Run UI tests (Playwright) with HTML report
        run: pytest tests/ui -q

      - name: Upload Playwright report (artifact)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: |
            ui-report.html
            test-results/
          if-no-files-found: warn

      # ==== GitHub Pages 发布 ====

      - name: Prepare GitHub Pages content
        if: always()
        run: |
          mkdir -p gh-pages
          cp ui-report.html gh-pages/index.html || true
          [ -d test-results ] && cp -r test-results gh-pages/test-results || true

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: gh-pages

      - name: Deploy to GitHub Pages
        id: deploy
        uses: actions/deploy-pages@v4
